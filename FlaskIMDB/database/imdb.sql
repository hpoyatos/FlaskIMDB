-- MySQL Script generated by MySQL Workbench
-- Wed Nov 23 12:06:13 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema cinema
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema cinema
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `cinema` DEFAULT CHARACTER SET utf8 ;
USE `cinema` ;

-- -----------------------------------------------------
-- Table `cinema`.`genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema`.`genero` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(60) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`filme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema`.`filme` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(150) NOT NULL,
  `ano` YEAR NOT NULL,
  `filmecol` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`filme_genero`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema`.`filme_genero` (
  `genero_id` INT NOT NULL,
  `filme_id` INT NOT NULL,
  PRIMARY KEY (`genero_id`, `filme_id`),
  INDEX `fk_genero_has_filme_filme1_idx` (`filme_id` ASC) VISIBLE,
  INDEX `fk_genero_has_filme_genero_idx` (`genero_id` ASC) VISIBLE,
  CONSTRAINT `fk_genero_has_filme_genero`
    FOREIGN KEY (`genero_id`)
    REFERENCES `cinema`.`genero` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_genero_has_filme_filme1`
    FOREIGN KEY (`filme_id`)
    REFERENCES `cinema`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema`.`pessoa` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(120) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cinema`.`filme_pessoa`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cinema`.`filme_pessoa` (
  `filme_id` INT NOT NULL,
  `pessoa_id` INT NOT NULL,
  `funcao` ENUM('Ator/Atriz', 'Diretor(a)') NOT NULL,
  PRIMARY KEY (`filme_id`, `pessoa_id`),
  INDEX `fk_filme_has_pessoa_pessoa1_idx` (`pessoa_id` ASC) VISIBLE,
  INDEX `fk_filme_has_pessoa_filme1_idx` (`filme_id` ASC) VISIBLE,
  CONSTRAINT `fk_filme_has_pessoa_filme1`
    FOREIGN KEY (`filme_id`)
    REFERENCES `cinema`.`filme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_filme_has_pessoa_pessoa1`
    FOREIGN KEY (`pessoa_id`)
    REFERENCES `cinema`.`pessoa` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
